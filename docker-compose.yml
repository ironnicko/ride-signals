version: '3.8'

services:
  # frontend:
  #   image: ironnicko1413/ride-signals-frontend:latest
  #   build:
  #     context: ./Frontend
  #     dockerfile: Dockerfile
  #   restart: always
  #   expose:
  #     - "3000"
  #   env_file:
  #     - ./.env
  #   networks:
  #     - webnet

  # backend:
  #   image: ironnicko1413/ride-signals-backend:latest
  #   build:
  #     context: ./Backend
  #     dockerfile: Dockerfile
  #   restart: always
  #   expose:
  #     - "8000"
  #   env_file:
  #     - ./.env
  #   networks:
  #     - webnet

  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    restart: always
    ports:
      - "8080:80"
      - "8443:443"

    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    # depends_on:
    #   - frontend
    #   - backend
    # networks:
    #   - webnet

  # mongo:
  #   image: mongo
  #   restart: always
  #   ports:
  #     - "27017:27017"
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: example
  #   volumes:
  #     - ./mongo_data:/data/db
  #   healthcheck:
      # test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      # interval: 2s
      # timeout: 5s
      # retries: 3
      # start_period: 5s

  # kafka:
  #   image: apache/kafka:latest
  #   ports:
  #     - "9092:9092"   # inside docker network
  #     - "9094:9094"   # exposed for host (local apps)
  #   environment:
  #     KAFKA_NODE_ID: 1
  #     KAFKA_PROCESS_ROLES: broker,controller
  #     KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,EXTERNAL://0.0.0.0:9094,CONTROLLER://0.0.0.0:9093
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
  #     KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
  #     KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  #     KAFKA_NUM_PARTITIONS: 3
  #   volumes:
  #     - ./kafka_data:/tmp/kafka-logs
  #   healthcheck:
  #     test: ["CMD", "bash", "-c", "kafka-topics.sh --bootstrap-server localhost:9092 --list || exit 1"]
  #     interval: 2s
  #     timeout: 5s
  #     retries: 3
  #     start_period: 5s

  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_URL: mongodb+srv://noname:EWIS5MxRrcUQ0lLd@cluster0.gzlhvkm.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
  #     ME_CONFIG_BASICAUTH_ENABLED: true
  #     ME_CONFIG_BASICAUTH_USERNAME: admin
  #     ME_CONFIG_BASICAUTH_PASSWORD: admin



  # kafka-ui:
  #   image: provectuslabs/kafka-ui:latest
  #   ports:
  #     - "8082:8080"
  #   restart: always
  #   environment:
  #     KAFKA_CLUSTERS_0_NAME: local
  #     KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
  #   depends_on:
  #     - kafka

networks:
  webnet:
    driver: bridge